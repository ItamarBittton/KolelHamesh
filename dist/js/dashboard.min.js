angular.module('RDash', ['ui.bootstrap', 'ui.router', 'ngCookies', 'ui-notification', 'ui.mask'])
    .config(function (NotificationProvider) {
        NotificationProvider.setOptions({
            startTop: 20,
            startRight: 10,
            verticalSpacing: 20,
            horizontalSpacing: 20,
            positionX: 'left',
            positionY: 'bottom'
        });
    });;
'use strict';

/**
 * Route configuration for the RDash module.
 */
angular.module('RDash').config(['$stateProvider', '$urlRouterProvider',
    function ($stateProvider, $urlRouterProvider) {

        // For unmatched routes
        $urlRouterProvider.otherwise('/');

        // Application routes
        $stateProvider
            // דף הבית    
            .state('index', {
                url: '/',
                templateUrl: 'templates/settings.html',
                controller: 'settingsController'
            })
            // למחוק
            .state('tables', {
                url: '/tables',
                templateUrl: 'templates/tables.html'
            })
            // אברכים
            .state('students', {
                url: '/students',
                templateUrl: 'templates/students.html',
                controller: 'studentController'
            })
            // כוללים
            .state('colels', {
                url: '/colels',
                templateUrl: 'templates/colel.html',
                controller: 'colelController'
            })
            // רשימת המלצות
            .state('recomends', {
                url: '/recomends',
                templateUrl: 'templates/recomends.html',
                controller: 'recomendController'
            })
            // דוח נוכחות
            .state('daily', {
                url: '/daily',
                templateUrl: 'templates/daily.html',
                controller: 'dailyController'
            })
            // ציונים
            .state('scores', {
                url: '/scores',
                templateUrl: 'templates/scores.html',
                controller: 'scoresController'
            });
    }
]);
angular.module('RDash')
    .controller('AlertsCtrl', function AlertsCtrl($scope, $cookies) {
        $scope.alerts = JSON.parse($cookies.get('alert')) || [];

        $scope.closeAlert = function (index) {
            $scope.alerts.splice(index, 1);
        };
    });
angular.module('RDash')
    .controller('colelController', function ($scope, Data, $rootScope) {
        Data.get('colels').then(function (data) {
            $scope.colels = data.colels;
        })

        $scope.colel = {};

        $scope.add = function () {
            $scope.display = true;
        };

        $scope.edit = function (id) {
            $scope.display = true;
            $scope.colel = $scope.colels[id];
            $scope.editId = id.toString();
        }

        $scope.save = function (valid) {
            if (!valid) {
                $scope.formErrors = true;
            } else if (valid) {
                var method = $scope.editId ? 'put' : 'post';

                Data[method]('colels', { id: $scope.editId, student: $scope.colel }).then(function (result) {
                    $scope.colels = data.colels;
                });

                $scope.close();
            }
        }

        $scope.close = function () {
            $scope.colel = {};
            $scope.formErrors = false;
            $scope.display = false;
        }

        $scope.action = function (index, action) {
            Data.post(action, { editId: $scope.editId, data: $scope.colels[index] }).then(function (data) {
                if (data.colels) $scope.colels = data.colels;
                $scope.editId = undefined;
            });
        };
    });
angular.module('RDash').controller("dailyController", function ($scope, Data) {
    $scope.disable = false;
    $scope.dropList = [];
    $scope.show = function (date) {
        if (date) {

            $scope.disable = true;


            Data.post('daily', { date }).then(function (data) {
                $scope.students = data.dailyRep;
                $scope.dropList = data.dropList;
                $scope.tempStudents = data.tempStudents;
            })


        }
    }

    $scope.students = [];
    $scope.viewDate = {
        year: new Date().getFullYear(),
        month: new Date().getMonth() + 1
    }

    $scope.save = function (valid) {
        var UPDaily = $scope.students.filter((val) => (val.late !== null));
        var UPDStud = $scope.tempStudents;
        // var method = $scope.editId ? 'put' : 'post';

        // Data[method]('colels', { id: $scope.editId, student: $scope.colel }).then(function (result) {
        //     $scope.colels = data.colels;
        // });
        Data.put('daily', {daily : UPDaily, oneTimeStud: UPDStud}).then(function(date){

        });

        $scope.close();
    }

    $scope.close = function () {
        $scope.students = undefined;
        $scope.definition = undefined;
        $scope.disable = false;
    }
});
/**
 * Master Controller
 */

angular.module('RDash')
    .controller('MasterCtrl', function MasterCtrl($scope, $cookies, $rootScope, translate, $location) {
        /**
         * Sidebar Toggle & Cookie Control
         */
        var mobileView = 992;

        $scope.getWidth = function () {
            return window.innerWidth;
        };

        $scope.logout = function () {
            document.cookie = 'token=; Max-Age=0; link=; Max-Age=0; alert=; Max-Age=0;';
            window.location.href = '/';
        }

        $scope.$watch($scope.getWidth, function (newValue, oldValue) {
            if (newValue >= mobileView) {
                if (angular.isDefined($cookies.get('toggle'))) {
                    $scope.toggle = !$cookies.get('toggle') ? false : true;
                } else {
                    $scope.toggle = true;
                }
            } else {
                $scope.toggle = false;
            }

        });

        $scope.toggleSidebar = function () {
            $scope.toggle = !$scope.toggle;
            $cookies.put('toggle', $scope.toggle);
        };

        $scope.role = $cookies.get('link');
        $rootScope.t = translate;

        window.onresize = function () {
            $scope.$apply();
        };
    });
angular.module('RDash')
    .controller('recomendController', function ($scope, Data, $rootScope) {
        Data.get('recomends').then(function (data) {
            $scope.recomends = data.recomends;
        })

        $scope.recomend = {};

        $scope.add = function () {
            $scope.display = true;
        };

        $scope.edit = function (id) {
            $scope.display = true;
            $scope.recomend = $scope.recomends[id];
            $scope.editId = id.toString();
        }

        $scope.save = function (valid) {
            if (!valid) {
                $scope.formErrors = true;
            } else if (valid) {
                var method = $scope.editId ? 'put' : 'post';

                Data[method]('recomends', { id: $scope.editId, student: $scope.recomend }).then(function (result) {
                    $scope.recomends = data.recomends;
                });

                $scope.close();
            }
        }

        $scope.close = function () {
            $scope.recomend = {};
            $scope.formErrors = false;
            $scope.display = false;
        }

        $scope.action = function (index, action) {
            Data.post(action, { editId: $scope.editId, data: $scope.recomends[index] }).then(function (data) {
                if (data.recomends) $scope.recomends = data.recomends;
                $scope.editId = undefined;
            });
        };
    });
angular.module('RDash')
    .controller('scoresController', function ($scope, Data) {
        $scope.students = [];
        $scope.dropList = {};
        $scope.UPDstud = [];

        Data.post('scores').then(function (data) {
            $scope.students = data.studentList;
            $scope.dropList = data.dropList;
        });

        $scope.save = function (data) {
            if (data) {
                $scope.UPDstud = $scope.students.filter((val) => (val.oral || val.oral === 0 || val.write));
                console.log($scope.UPDstud);
            }
        }
    })
angular.module('RDash')
    .controller('settingsController', function ($scope, Data, $state, $rootScope, Notification) {
        $scope.data = {
            shulName: 'בית כנסת חב"ד',
            street: "רבי עקיבא",
            number: '4',
            city: 'אשדוד',
            comments: '',
            start1: '20:00',
            start2: '20:00',
            start3: '20:00',
            start4: '20:00',
            start5: '20:00',
            start6: '20:00',
            end1: '21:30',
            end2: '21:30',
            end3: '21:30',
            end4: '21:30',
            end5: '21:30',
            end6: '21:30'
        }

        $scope.submitData = function (changed) {
            if ($scope.agree) {
                $rootScope.agree = true;

                var changedData = {};

                angular.forEach($scope.data, function (value, key) {
                    if ($scope.settingsForm[key].$dirty) {
                        changedData[key] = value;
                    };
                });

                if (!angular.equals({}, changedData)) {
                    Data.post('recomends', {
                        data: changedData,
                        table: 'colels',
                        editId: true
                    })
                };

                $state.go('students');
            } else {
                Notification.error('חובה לאשר את הנתונים');
            }
        };
    })
angular.module('RDash')
    .controller('studentController', function ($scope, Data) {
        Data.get('students').then(function (data) {
            $scope.students = data.students;
        })

        $scope.student = {};

        $scope.add = function () {
            $scope.display = true;
        };

        $scope.edit = function (id) {
            $scope.display = true;
            $scope.student = $scope.students[id];
            $scope.student.editId = id.toString();
        }

        $scope.save = function (valid) {
            if (!valid) {
                $scope.formErrors = true;
            } else if (valid) {                
                Data.post('recomends', { data: $scope.student, table: 'students' }).then(function (result) {
                    $scope.students = result.data;
                });

                // Data[method]('students', { id: $scope.student.editId, student: $scope.student }).then(function (result) {
                //     $scope.students = data.students;
                // });

                $scope.close();
            }
        }

        $scope.close = function () {
            $scope.student = {};
            $scope.formErrors = false;
            $scope.display = false;
        }
    });
// This service connects to our REST API
angular.module('RDash').factory("Data", function ($http, Notification) {

    var serviceBase = '/';

    var obj = {};
    var alertMessage = function (data) {
        if (data.success) Notification.success(data.success);
        if (data.error) Notification.error(data.error);
    }
    obj.get = function (q, external) {
        var path = external ? q : serviceBase + q;
        return $http.get(path).then(function (results) {
            alertMessage(results.data);
            return results.data;
        });
    };
    obj.post = function (q, object) {
        return $http.post(serviceBase + q, object).then(function (results) {
            alertMessage(results.data);
            return results.data;
        });
    };
    obj.put = function (q, object) {
        return $http.put(serviceBase + q, object).then(function (results) {
            alertMessage(results.data);
            return results.data;
        });
    };
    obj.delete = function (q) {
        return $http.delete(serviceBase + q).then(function (results) {
            alertMessage(results.data);
            return results.data;
        });
    };

    return obj;
});
// This service translates keys to hebrew.
angular.module('RDash').constant("translate", {
    "account": "חשבון",
    "accountName": "על שם",
    "bank": "בנק",
    "branch": "סניף",
    "city": "עיר",
    "firstName": "שם פרטי",
    "house": "מס בית",
    "id": "זהות",
    "lastName": "שם משפחה",
    "phone": "טלפון",
    "street": "רחוב",
    "students": "אברך",
    "colels": "כולל",
    "shulName": "שם בית הכנסת",
    "number": "מספר בית",
    "comments": "הערות",
    "start1": "שעת התחלה יום ראשון",
    "start2": "שעת התחלה יום שני",
    "start3": "שעת התחלה יום שלישי",
    "start4": "שעת התחלה יום רביעי",
    "start5": "שעת התחלה יום חמישי",
    "start6": "שעת התחלה יום שישי",
    "end1": "שעת סיום יום ראשון",
    "end2": "שעת סיום יום שני",
    "end3": "שעת סיום יום שלישי",
    "end4": "שעת סיום יום רביעי",
    "end5": "שעת סיום יום חמישי",
    "end6": "שעת סיום יום שישי",
});
/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

angular
    .module('RDash')
    .directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="spinner">' +
                     '<div class="bounce1"></div>' +
                     '<div class="bounce2"></div>' +
                     '<div class="bounce3"></div>' +
                  '</div>'
    };
    return directive;
};
angular
    .module('RDash').directive("myCalendar", function () {
        return {
            scope: {
                viewDate: "=",
                show: "&"
            },
            template: `<div class="board">
                           <div class="square" ng-repeat='day in month' ng-click="show({date : day.gerg})">
                               <div class="date">{{day.val}}<span class="gerg">{{day.gerg.getDate()}}</span></div>
                           </div>
                       </div>`,
            link: function (scope) {
                var month = scope.viewDate.month - 1,
                    year = scope.viewDate.year,
                    range = new Date(year, scope.viewDate.month, 0).getDate(),
                    start = new Date(year, month, 1).getDay();

                scope.month = [];
                var currDay = 0;
                for (var i = 0; i < 35; i++) {
                    if (i < start || i >= range + start) {
                        scope.month.push({
                            key: i
                        });
                    } else {
                        var today = new Date(year, month, currDay + 1),
                            HebDate = new Hebcal.HDate(new Date(today)).toString('h').split(' ').slice(0, 2).join(' ');
                        scope.month.push({
                            key: i,
                            val: HebDate,
                            gerg: today
                        });
                        currDay++;
                    }
                }
            }
        }
    });
angular
	.module('RDash').directive("studentList", function () {
		return {
			scope: {
				students: "=",
				dropList: "="
			},
			template: `<div>
		<table class="table">
			  <thead>
				<td>שם פרטי</td>
				<td>שם משפחה</td>
				<td>טלפון</td>
				<td ng-repeat="title in dropList.title">{{title}}</td>
			  </thead>
			  <tbody>
				<tr ng-repeat="student in students">
					<td >{{student.first}}</td>
					<td >{{student.last}}</td>
					<td >{{student.phone}}</td>
					<td ng-repeat="option in dropList.options">
						<select 
								ng-model="student.val" 
								ng-options="def.value as def.name for def in option" class="form-control">
						</select>
					</td>
				</tr>
			  </tbody>
			  </table>
		</div>`,
			link: function (scope) {

			}
		}
	})
/**
 * Widget Body Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '=?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};

/**
 * Widget Footer Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

angular
    .module('RDash')
    .directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><div class="row"><div class="pull-right"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-left col-xs-6 col-sm-4" ng-transclude></div></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

angular
    .module('RDash')
    .directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};